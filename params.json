{"name":"Load-grunt-configs","tagline":"Allows splitting your grunt task configuration into separate files","body":"# load-grunt-configs [![GitHub version](https://badge.fury.io/gh/creynders%2Fload-grunt-configs.png)](http://badge.fury.io/gh/creynders%2Fload-grunt-configs)[![Build Status](https://secure.travis-ci.org/creynders/load-grunt-configs.png?branch=master)](http://travis-ci.org/creynders/load-grunt-configs)\r\n\r\n> Loads grunt task configurations from separate files.\r\n\r\nGrunt files tend to grow fast due to big amount of tasks and their configuration objects.\r\n**This module allows you to split your Grunt task configuration objects into separate files any way you choose.**\r\nThere are similar modules that allow you to the same, but with `grunt-load-configs` **you can configure targets for a single task in multiple files**.\r\n\r\nThis means you no longer need to group all task targets into a single file, but can split them up according to their task dependencies.\r\n\r\n#### Example\r\n\r\nyou use the `watch` task to recompile your `.scss` files, but also to lint your source `.js` whenever one has changed. Typically you'd add a single `watch` configuration object to configure this, but with `load-grunt-configs` you can split these into several files and group all task targets together whenever it makes sense:\r\n\r\n```javascript\r\n\r\n//config/css.js\r\n\r\nmodule.exports.tasks={\r\n    watch:{\r\n        scss: {\r\n            files: ['app/sass/*.{scss,sass}'],\r\n            tasks: ['compass:source']\r\n        }\r\n    },\r\n    compass:{\r\n        source:{\r\n            //configuration settings\r\n        }\r\n    }\r\n};\r\n\r\n//config/lint.js\r\n\r\nmodule.exports.tasks = {\r\n    watch : {\r\n        lint: {\r\n            files: ['app/{,*/}*.js']\r\n            tasks: ['jshint:source']\r\n        }\r\n    },\r\n    jshint: {\r\n        source: {\r\n            //configuration settings\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Getting Started\r\n\r\n`load-grunt-configs` supports the loading of grunt config files in following formats:\r\n\r\n* **json**\r\n* **js** modules\r\n* **coffee** modules\r\n* **cson**\r\n* **yaml**\r\n\r\nThough the provided examples are mainly for `json` files and `js` modules, the same applies to the other formats.\r\nYou can find examples of all formats in the [`config`][config] directory of this project.\r\n\r\n### Migrating your configuration from a big, fat grunt file\r\n\r\nI wrote a small utility Grunt task which takes your full-blown Grunt configuration and automatically splits it into separate files: [grunt-generate-configs][grunt-generate-configs] (supports all formats `load-grunt-configs` does too)\r\n\r\n**You only need to do this once**:\r\n\r\n```shell\r\nnpm install grunt-generate-configs\r\ngrunt generate-configs\r\n```\r\n\r\nThis will create a separate `.json` file for each task inside a `config` directory. (See [grunt-generate-configs][grunt-generate-configs] for all options: a different format, directory, etc.)\r\n\r\nNext you need to delete the full configuration object in your `Gruntfile.js`.\r\n\r\nThen ...\r\n\r\n### Automatically loading the config files\r\n\r\nInstall the _load-grunt-configs_ module with: `npm install load-grunt-configs --save-dev`\r\n\r\n```javascript\r\n// Gruntfile.js\r\nmodule.exports = function (grunt) {\r\n    grunt.loadNpmTasks('grunt-contrib-jshint');\r\n\r\n    //loads the various task configuration files\r\n    var configs = require('load-grunt-configs')(grunt);\r\n    grunt.initConfig(configs);\r\n\r\n    grunt.registerTask('default', ['jshint']);\r\n}\r\n```\r\n\r\n`load-grunt-configs` supports the loading of config files as `.js`, `.json`, `.yaml` or `.coffee`. You can even mix and match if you want. Take a look at the [`config`][config] folder of this project to see examples for all formats.\r\n\r\nTo configure the `jshint` task for example, add a file `config/jshint.json` (in case you didn't use the generator to automatically generate it):\r\n\r\n```json\r\n{\r\n    \"gruntfile\"       : {\r\n        \"src\" : \"Gruntfile.js\"\r\n    }\r\n}\r\n```\r\n\r\nBy default the basename (without the file extension) of the filename will be used to recognize which task is being configured. `jshint` in the above example.\r\n\r\n## Advanced usage\r\n\r\n### Using node modules for configuration\r\n\r\nTask configuration is also possible through node modules, either by exposing an object:\r\n\r\n```javascript\r\n//config/jshint.js\r\nmodule.exports = {\r\n     gruntfile       : {\r\n         src : \"Gruntfile.js\"\r\n     }\r\n }\r\n ```\r\n\r\n Or by exposing a function which returns an object:\r\n\r\n```javascript\r\n//config/jshint.js\r\nmodule.exports = function(grunt, options){\r\n     return {\r\n         gruntfile       : {\r\n             src : \"Gruntfile.js\"\r\n         }\r\n     }\r\n }\r\n```\r\n\r\n### Declaring multiple task configurations in one file\r\n\r\nIf the returned object contains a `tasks` key, its value will be assumed to be a name/configuration pair mapping:\r\n\r\n```javascript\r\n//config/grunt.json\r\n{\r\n    \"tasks\" : {\r\n        \"jshint\" : {\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\"\r\n            }\r\n        },\r\n        \"watch\" : {\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\",\r\n                \"tasks\" : ['jshint:gruntfile']\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nThe above will configure both the `jshint` and `watch` tasks.\r\n\r\n### Split multi-task configurations\r\n\r\nBut wait, there is more!\r\nYou can split multi-task configurations in multiple files as well.\r\nFor instance if you have the above `config/grunt.json` file and you add the following file:\r\n\r\n```javascript\r\n//config/test.json\r\n{\r\n    \"tasks\": {\r\n        \"jshint\" : {\r\n            \"test\": {\r\n                \"src\": [\"test/**/*.js\"]\r\n            }\r\n        }\r\n        \"watch\" : {\r\n            \"test\" : {\r\n                \"src\" : [\"test/**/*.js\"],\r\n                \"tasks\" : ['jshint:test']\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNow both `watch` and `jshint` tasks have two targets: `gruntfile` and `test`.\r\n\r\n### Passing values to the configuration files\r\n\r\nIf you declare a function in your config file it receives two arguments: `grunt` and `options`, which allows you to use the `grunt` instance and pass values.\r\n\r\n```javascript\r\n//Gruntfile.js\r\nvar options = {\r\n    paths: {\r\n        jshintrc: '.jshintrc'\r\n    }\r\n};\r\n\r\nvar configs = require('load-grunt-configs')(grunt, options);\r\n\r\n//config/jshint.js\r\nmodule.exports = function(grunt, options){\r\n     return {\r\n         gruntfile       : {\r\n             src : \"Gruntfile.js\"\r\n         }\r\n     };\r\n}\r\n```\r\n\r\n### Task name prefixed task targets\r\n\r\nAs a convenience method you can prefix your task targets with the task name, separated by a \":\" (colon). This allows you to do this:\r\n\r\n```javascript\r\n//config/monitor.js\r\nmodule.exports.tasks = {\r\n    \"watch:test\" : {\r\n        src : [\"test/**/*.js\"],\r\n        tasks : ['jshint:test']\r\n    },\r\n    \"watch:gruntfile\"       : {\r\n        src : \"Gruntfile.js\",\r\n        tasks : ['jshint:gruntfile']\r\n    }\r\n}\r\n\r\n```\r\n\r\nThis makes it easier when in the future you'd like to move the `watch:gruntfile` task configuration to another file for instance.\r\n\r\n## Options\r\n\r\nYou can modify the directory in which the configuration files need to reside:\r\n\r\n```javascript\r\n//Gruntfile.js\r\nvar options = {\r\n    config : {\r\n        src: \"options/*.js\"\r\n    }\r\n};\r\n\r\nconfigs = require('load-grunt-configs')(grunt, options);\r\n```\r\n\r\nWill search for the configuration files in an `options` directory.\r\n\r\n## Examples\r\n\r\nYou can take a look at the `Gruntfile.js` and the configuration files in the `config` directory of this project.\r\nOr browse through the 3 demos in this repository:\r\n\r\n1. [Configuration per task](https://github.com/creynders/load-grunt-configs/tree/master/demos/1.by-taskname). Each task configuration goes into its own file: `watch.js`, `jshint.js`, `concurrent.js`, ...\r\n1. [A single configs file](https://github.com/creynders/load-grunt-configs/tree/master/demos/2.single-file). The entirety of the grunt configuration is moved to a seperate file (`grunt.js`). This way the Gruntfile.js only contains task declarations.\r\n1. [Configuration by task type](https://github.com/creynders/load-grunt-configs/tree/master/demos/3.by-type). Task target configurationsare spread over multiple files and grouped wherever logically it makes sense.\r\nE.g. `build.js`, `serve.js`, `test.js`\r\n1. [Various formats][config]: See the `config` directory of this project.\r\n\r\n## All various possibilities\r\n\r\n* **json with a single task configuration**: E.g. configures `jshint` task in `config/jshint.json` (task name extracted from file name)\r\n\r\n```json\r\n{\r\n    \"gruntfile\"       : {\r\n        \"src\" : \"Gruntfile.js\"\r\n    }\r\n}\r\n```\r\n\r\n* **json with multiple task configurations**: E.g. configures `jshint` and `watch` tasks in `config/<whatever makes sense to you>.json`. Note the top-most key \"tasks\" here, it alerts the module not to extract the task name from the file name.\r\n\r\n```json\r\n{\r\n    \"tasks\" : {\r\n        \"jshint\" : {\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\"\r\n            }\r\n        },\r\n        \"watch\" : {\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\",\r\n                \"tasks\" : ['jshint:gruntfile']\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n* **json with multiple task configurations using task prefixed targets**: E.g. configures `jshint` and `watch` tasks in `config/<whatever makes sense to you>.json`\r\n\r\n```json\r\n{\r\n    \"tasks\" : {\r\n        \"jshint:gruntfile\"       : {\r\n            \"src\" : \"Gruntfile.js\"\r\n        },\r\n        \"watch:gruntfile\"       : {\r\n            \"src\" : \"Gruntfile.js\",\r\n            \"tasks\" : ['jshint:gruntfile']\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n* **js with single task configuration as an object**: E.g. configures `jshint` task in `config/jshint.js`\r\n\r\n```javascript\r\nmodule.exports = {\r\n     gruntfile       : {\r\n         src : \"Gruntfile.js\"\r\n     }\r\n};\r\n```\r\n\r\n* **js with single task configuration as a function**: E.g. configures `jshint` task in `config/jshint.js`\r\n\r\n```javascript\r\nmodule.exports = function(grunt, options){\r\n    return {\r\n        gruntfile       : {\r\n            src : \"Gruntfile.js\"\r\n        }\r\n    };\r\n};\r\n```\r\n\r\n* **js with multiple task configurations as an object**: E.g. configures `jshint` and `watch` task in `config/<whatever makes sense to you>.js`\r\n\r\n```javascript\r\nmodule.exports.tasks = { //note the `tasks` export here [!]\r\n    jshint: {\r\n        gruntfile       : {\r\n            src : \"Gruntfile.js\"\r\n        }\r\n    },\r\n    watch : {\r\n        gruntfile       : {\r\n            src : \"Gruntfile.js\",\r\n            tasks : ['jshint:gruntfile']\r\n        }\r\n    }\r\n\r\n};\r\n```\r\n\r\n* **js with multiple task configurations as a function**: E.g. configures `jshint` and `watch` task in `config/<whatever makes sense to you>.js`\r\n\r\n```javascript\r\nmodule.exports = function(grunt, options) {\r\n    return {\r\n        tasks:{\r\n            jshint: {\r\n                gruntfile       : {\r\n                    src : \"Gruntfile.js\"\r\n                }\r\n            },\r\n            watch : {\r\n                gruntfile       : {\r\n                    src : \"Gruntfile.js\",\r\n                    tasks : ['jshint:gruntfile']\r\n                }\r\n            }\r\n        }\r\n    };\r\n};\r\n```\r\n\r\n* **js with multiple task configurations as an object using task prefixed targets**: E.g. configures `jshint` and `watch` task in `config/<whatever makes sense to you>.js`\r\n\r\n```javascript\r\nmodule.exports.tasks = { //note the `tasks` export here [!]\r\n    \"jshint:gruntfile\"       : {\r\n        src : \"Gruntfile.js\"\r\n    },\r\n    \"watch:gruntfile\"       : {\r\n            src : \"Gruntfile.js\",\r\n            tasks : ['jshint:gruntfile']\r\n    }\r\n};\r\n```\r\n\r\n* **js with multiple task configurations as a function using task prefixed targets**: E.g. configures `jshint` and `watch` task in `config/<whatever makes sense to you>.js`\r\n\r\n```javascript\r\nmodule.exports = function(grunt, options) {\r\n    return {\r\n        tasks:{\r\n            \"jshint:gruntfile\"       : {\r\n                src : \"Gruntfile.js\"\r\n            },\r\n            \"watch:gruntfile\"       : {\r\n                src : \"Gruntfile.js\",\r\n                tasks : ['jshint:gruntfile']\r\n            }\r\n        }\r\n    };\r\n};\r\n```\r\n\r\n## Changelog\r\n\r\n#### v0.3.3\r\n\r\n* Add cson support\r\n* Loads yaml files with safeLoad\r\n\r\n#### v0.3.2\r\n\r\n* fixes incorrect grunt dep\r\n* adds coffee config file\r\n* adds yaml support\r\n\r\n#### v0.3.1\r\n\r\n* fixes incorrect overwrite of passedin options for this task\r\n* adds tests\r\n* Updates examples and adds all various configuration possibilities\r\n\r\n#### v0.3.0\r\n\r\n* disallows function declaration anywhere else than as direct export\r\n* extracts taskname regardless of file extension\r\n\r\n#### v0.2.0\r\n\r\n* adds coffeescript support\r\n* adds parsing of taskname prefixed task targets\r\n* fixes incorrect handling of functions at task config leaves\r\n\r\n#### v0.1.0\r\n\r\n* adds \"by type' demo\r\n* adds \"by taskname\" demo\r\n* adds \"single file\" demo\r\n* Initial commit\r\n\r\n## License\r\nCopyright (c) 2014 Camille Reynders\r\nLicensed under the MIT license.\r\n\r\nWith special thanks to @stefanpenner and @thomasboyt.\r\nThis module is based on the ideas in Thomas' excellent tutorial:\r\nhttp://www.thomasboyt.com/2013/09/01/maintainable-grunt.html\r\n\r\n[![Analytics](https://ga-beacon.appspot.com/UA-12080113-4/load-grunt-configs/README.md)](https://github.com/igrigorik/ga-beacon)\r\n\r\n[grunt-generate-configs]: https://github.com/creynders/grunt-generate-configs\r\n[config]: https://github.com/creynders/load-grunt-configs/tree/master/config","google":"UA-12080113-2","note":"Don't delete this file! It's used internally to help with page regeneration."}