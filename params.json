{"name":"Load-grunt-configs","tagline":"Allows splitting your grunt task configuration into separate files","body":"# load-grunt-configs [![Build Status](https://secure.travis-ci.org/creynders/load-grunt-configs.png?branch=master)](http://travis-ci.org/creynders/load-grunt-configs)\r\n\r\nLoads grunt task configurations from separate files.\r\n\r\nGrunt files tend to grow fast due to big amount of tasks and their configuration objects.\r\nThis module allows you to split your Grunt task configuration objects into separate files any way you choose.\r\nThere are similar modules that allow you to the same, but with `grunt-load-configs` **you can configure targets for a single task in multiple files**.\r\n\r\nThis means you no longer need to group all task targets into a single file, but can split them up according to their task dependencies. \r\n\r\nFor example: you use the `watch` task to recompile your `.scss` files, but also to lint your source `.js` whenever one has changed. Typically you'd add a single `watch` configuration object to configure this, but with `load-grunt-configs` you can split these into several files and group all task targets together whenever it makes sense:\r\n\r\n```javascript\r\n\r\n//config/css.js\r\n\r\nmodule.exports.tasks={\r\n    watch:{\r\n        scss: {\r\n            files: ['app/sass/*.{scss,sass}'],\r\n            tasks: ['compass:source']\r\n        }\r\n    },\r\n    compass:{\r\n        source:{\r\n            //configuration settings\r\n        }\r\n    }\r\n};\r\n\r\n//config/lint.js\r\n\r\nmodule.exports.tasks = {\r\n    watch : {\r\n        lint: {\r\n            files: ['app/{,*/}*.js']\r\n            tasks: ['jshint:source']\r\n        }\r\n    },\r\n    jshint: {\r\n        source: {\r\n            //configuration settings\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Getting Started\r\nInstall the module with: `npm install load-grunt-configs --save-dev`\r\n\r\n```javascript\r\n// Gruntfile.js\r\nmodule.exports = function (grunt) {\r\n    grunt.loadNpmTasks('grunt-contrib-jshint');\r\n\r\n    var configs = require('load-grunt-configs')(grunt);\r\n    grunt.initConfig(configs);\r\n\r\n    grunt.registerTask('default', ['jshint']);\r\n}\r\n```\r\n\r\n```json\r\n// config/jshint.json\r\n{\r\n    \"options\"   : {\r\n        \"jshintrc\" : \".jshintrc\"\r\n    },\r\n    \"gruntfile\"       : {\r\n        \"src\" : \"Gruntfile.js\"\r\n    }\r\n}\r\n```\r\n\r\n## Using node modules for configuration\r\n\r\nTask configuration is also possible through node modules, either by exposing an object:\r\n\r\n```javascript\r\n//config/jshint.js\r\nmodule.exports = {\r\n     options   : {\r\n         jshintrc : \".jshintrc\"\r\n     },\r\n     gruntfile       : {\r\n         src : \"Gruntfile.js\"\r\n     }\r\n }\r\n ```\r\n\r\n Or by exposing a function which returns an object:\r\n\r\n```javascript\r\n//config/jshint.js\r\nmodule.exports = function(grunt, options){\r\n     return {\r\n         options   : {\r\n             jshintrc : \".jshintrc\"\r\n         },\r\n         gruntfile       : {\r\n             src : \"Gruntfile.js\"\r\n         }\r\n     }\r\n }\r\n```\r\n\r\n## Declaring multiple task configurations in one file\r\n\r\nIf the returned object contains a `tasks` key, its value will be assumed to be a name/configuration pair mapping:\r\n\r\n```javascript\r\n//config/grunt.json\r\n{\r\n    \"tasks\" : {\r\n        \"jshint\" : {\r\n            \"options\"   : {\r\n                \"jshintrc\" : \".jshintrc\"\r\n            },\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\"\r\n            }\r\n        },\r\n        \"watch\" : {\r\n            \"gruntfile\"       : {\r\n                \"src\" : \"Gruntfile.js\",\r\n                \"tasks\" : ['jshint:gruntfile']\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\nThe above will configure both the `jshint` and `watch` tasks.\r\n\r\n## Split multi-task configurations\r\n\r\nBut wait, there is more!\r\nYou can split multi-task configurations in multiple files as well.\r\nFor instance if you have the above `config/grunt.json` file and you add the following file:\r\n\r\n```javascript\r\n//config/test.json\r\n{\r\n    \"tasks\": {\r\n        \"jshint\" : {\r\n            \"test\": {\r\n                \"src\": [\"test/**/*.js\"]\r\n            }\r\n        }\r\n        \"watch\" : {\r\n            \"test\" : {\r\n                \"src\" : [\"test/**/*.js\"],\r\n                \"tasks\" : ['jshint:test']\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nNow both `watch` and `jshint` tasks have two targets: `gruntfile` and `test`.\r\n\r\n## Passing values to the configuration files\r\n\r\nIf you declare a function in your config file it receives two arguments: `grunt` and `options`, which allows you to use the `grunt` instance and pass values.\r\n\r\n```javascript\r\n//Gruntfile.js\r\nvar options = {\r\n    paths: {\r\n        jshintrc: '.jshintrc'\r\n    }\r\n};\r\n\r\nvar configs = require('load-grunt-configs')(grunt, options);\r\n\r\n//config/jshint.js\r\nmodule.exports = function(grunt, options){\r\n     return {\r\n         options   : {\r\n             jshintrc : \"<%= options.paths.jshintrc %>\"\r\n         },\r\n         gruntfile       : {\r\n             src : \"Gruntfile.js\"\r\n         }\r\n     };\r\n}\r\n```\r\n\r\n## Options\r\n\r\nYou can modify the directory in which the configuration files need to reside:\r\n\r\n```javascript\r\n//Gruntfile.js\r\nvar options = {\r\n    config : {\r\n        src: \"options/*.js\"\r\n    }\r\n};\r\n\r\nconfigs = require('load-grunt-configs')(grunt, options);\r\n```\r\n\r\nWill search for the configuration files in an `options` directory.\r\n\r\n## License\r\nCopyright (c) 2014 Camille Reynders\r\nLicensed under the MIT license.\r\n\r\nWith special thanks to @stefanpenner and @thomasboyt.\r\nThis module is based on the ideas in Thomas' excellent tutorial:\r\nhttp://www.thomasboyt.com/2013/09/01/maintainable-grunt.html\r\n","google":"UA-12080113-2","note":"Don't delete this file! It's used internally to help with page regeneration."}